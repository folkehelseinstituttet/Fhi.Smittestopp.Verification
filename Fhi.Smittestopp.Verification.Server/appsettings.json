{
  "connectionStrings": {
    "verificationDb": "<Inject connection string to SQL server per env for release>"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "logFile": {
    "enabled": "<Override in appsettings.<env>.json, if true, adds file log sink>",
    "filename": "logs.txt"
  },
  "logAnalytics": {
    "enabled": "<Override in appsettings.<env>.json, if true, adds azure log analytics log sink>",
    "workspaceId": "<Inject Log Analytics workspace Id per env for release>",
    "primaryKey": "<Inject Log Analytics primary key per env for release>"
  },
  "clients": [
    {
      "clientId": "smittestopp",
      "requireClientSecret": false,
      "requirePkce": true,
      "allowedGrantTypes": [
        "authorization_code"
      ],
      "allowedScopes": [
        "openid",
        "verification-info",
        "upload-api",
        "smittestop"
      ],
      "redirectUris": [
        "no.fhi.smittestopp-exposure-notification:/oauth2redirect"
      ]
    }
  ],
  "health": {
    "checkDb": true,
    "checkMsis": true 
  },
  "idPorten": {
    "baseUrl": "<Inject or override in appsettings.<env>.json base URL for ID-porten per env for release>",
    "clientId": "<Inject or override in appsettings.<env>.json client ID per env for release>",
    "clientSecret": "<Inject client secret per env for release | for dev: dotnet user-secrets set idporten:clientSecret your-client-secret>"
  },
  "msis": {
    "baseUrl": "<Inject or override in appsettings.<env>.json MSIS URL per env for release>",
    "certId": "<Inject or override in appsettings.<env>.json name of MSIS client cert in key vault per env for release (if certificates.locator=local: use thumbprint)>"
  },
  "signingCredentials": {
    "useDevSigningCredentials": "<Override in appsettings.<env>.json, if true uses dev signing credentials for issued tokens>",
    "signing": "<Inject or override in appsettings.<env>.json name of cert in key vault per env (if certificates.locator=local: use thumbprint)>",
    "_comment": "additionalValidation takes an array of values similar to <signing> and adds matching certs to list valid for token signature validation",
    "additionalValidation": [],
    "rolloverDuration": "1.00:00:00.0"
  },
  "certificates": {
    "locator": "<Set to azure or local in appsettings.<env>.json>",
    "azureVault": {
      "vaultUri": "<Inject or override in appsettings.<env>.json key vault uri per env if locator=azure>"
    }
  },
  "common": {
    "verificationLimit": {
      "MaxVerificationsAllowed": 3,
      "MaxLimitDuration": "1.00:00:00.0"
    },
    "pseudonyms": {
      "key": "<Inject base64 representation of key used for hashing ID-porten pseudonyms>"
    },
    "verification": {
      "useFixedTestCases": false,
      "testCases": {
        "_comment": "Configuration used for the test cases if useFixedTestCases = true (use prop names below without _ to configure test cases per env)",
        "_oddEvenInfectionResults": "<if true, all results are based on odd/even check (-> negative/positive), otherwise performs MSIS-lookup>",
        "_fixedDaysSincePositiveTest": "<number days since positive test for odd/even infection results>",
        "_fixedLimitExceededResults": "<if true, verification limit is only ever exceeded by users in limitExceededUsers, otherwise normal limit behaviour>",
        "_technicalErrorUsers": [ "<National identifiers of users that will always produce technical error>" ],
        "_limitExceededUsers": [ "<National identifiers of users that should always have exceeded verification limit>" ]
      }
    },
    "anonymousTokens": {
      "enabled": false,
      "certId": "<Inject or override in appsettings.<env>.json name of anonymous token signing cert in key vault per env for release (if certificates.locator=local: use thumbprint)>",
      "certPassword": "<Inject or override in appsettings.<env>.json the password used to export the private key from the PFX-certificate file (use empty string if no password is used)"
    }
  },
  "cleanupTask": {
    "enabled": false,
    "runInterval": "1:00:00.0"
  },
  "interaction": {
    "enableHomePage": false,
    "requireAuthorizationRequest": true,
    "displayErrorDescription": false
  }
}
